campaignTrail_temp.election_json = [
    {
        "model": "campaign_trail.election",
        "pk": 15,
        "fields": {
            "year": 1984,
            "summary": "The actor-turned President is truly in for the job of a lifetime. In the years of his first term coming from a landslide victory, he will have much on his hands. He must make reforms. He must save the economy. He must secure the midterms. He must make his name one to be remembered.</p>Mr. Reagan has to balance all of this on top of running the country, inside and out. Can he make the reforms, take the second term, and ensure a legacy for generations to come? Only time shall tell. This is not just the dusk of a time long past, the evening of a tired era, but the start of a new one. This is a timeless experience. This is a new <i>Morning In America</i>.",
            "image_url": "https://lh3.googleusercontent.com/d/1YU3lAQu5Y7mDIUurhCdBbVOORE68uRVI",
            "winning_electoral_vote_number": 270,
            "advisor_url": "https://lh3.googleusercontent.com/d/1bRkhg5IqeZhLTwnv5UFUfVxeKF--s_qc",
            "recommended_reading": "<h4 style=\"margin-top: 0.5em;\">Books and Links</h4>Peter Goldman - <a href=\"http://www.amazon.com/exec/obidos/ASIN/B012HU7SZA/amhius20-20\" target=\"_blank\">The Quest for the Presidency, 1988</a></br>L.A. Times, November 10, 1988 - <a href=\"http://articles.latimes.com/1988-11-10/news/mn-299_1_dukakis-lost-reelection\" target=\"_blank\">How Presidential Race Was Won-and Lost : Michael S. Dukakis</a></br>L.A. Times, November 10, 1988 - <a href=\"http://articles.latimes.com/1988-11-10/news/mn-302_1_george-bush\" target=\"_blank\">How Presidential Race Was Won--and Lost : George Bush</a></br><a href=\"http://www.usnews.com/news/articles/2008/01/17/the-photo-op-that-tanked\" target=\"_blank\">Michael Dukakis: The Photo Op That Tanked</a>",
            "has_visits": 1,
            "no_electoral_majority_image": "https://www.jetsimon.com/public/static/images/2012-no-majority.jpg",
            "creator": "Dan Bryan",
            "display_year": "1984 - Morning In America"
        }
    }
]

campaignTrail_temp.candidate_json = [
    {
        "model": "campaign_trail.candidate",
        "pk": 152,
        "fields": {
            "first_name": "Ronald W.",
            "last_name": "Reagan",
            "election": 15,
            "party": "Republican",
            "state": "California",
            "priority": 1,
            "description": "Yeah no this is just an example here you won't catch me doing the actual writing here but hey check <h1>this out</h1>",
            "color_hex": "#FF0000",
            "secondary_color_hex": "#FFA0A0",
            "is_active": 1,
            "image_url": "https://lh3.googleusercontent.com/d/1-F6KshwMmxf5V2L9G7PU8j0Xzey7u9wi",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 153,
        "fields": {
            "first_name": "Oh No, It's",
            "last_name": "The Democrats",
            "election": 15,
            "party": "Democrat",
            "state": "Massachusetts",
            "priority": 2,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 154,
        "fields": {
            "first_name": "The",
            "last_name": "Libertarians",
            "election": 15,
            "party": "Democrat",
            "state": "South Dakota",
            "priority": 8,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 155,
        "fields": {
            "first_name": "The",
            "last_name": "Greens",
            "election": 15,
            "party": "Democrat",
            "state": "South Dakota",
            "priority": 8,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 156,
        "fields": {
            "first_name": "George H.W.",
            "last_name": "Bush",
            "election": 15,
            "party": "Republican",
            "state": "Texas",
            "priority": 5,
            "description": "'",
            "color_hex": "#FF0000",
            "secondary_color_hex": "#FFA0A0",
            "is_active": 0,
            "image_url": "https://lh3.googleusercontent.com/d/1TdcFRVMTOyB2GUCtY3ACJWPqWWjsemMe",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "Bruh I already said I ain't typing allat",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 159,
        "fields": {
            "first_name": "The",
            "last_name": "Running Mate",
            "election": 15,
            "party": "Democrat",
            "state": "South Dakota",
            "priority": 8,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 0,
            "running_mate": true
        }
    }
]

campaignTrail_temp.running_mate_json = [
    {
        "model": "campaign_trail.running_mate",
        "pk": 106,
        "fields": {
            "candidate": 155,
            "running_mate": 164
        }
    },
    {
        "model": "campaign_trail.running_mate",
        "pk": 101,
        "fields": {
            "candidate": 153,
            "running_mate": 159
        }
    },
    {
        "model": "campaign_trail.running_mate",
        "pk": 98,
        "fields": {
            "candidate": 152,
            "running_mate": 156
        }
    }
]

e=campaignTrail_temp

var changeGameDisp = (hide) => {
  disp = "";
  if (hide) {
    disp = "none";
  }
  document.getElementsByClassName("inner_window_w_desc")[0].style.display = disp
};

e.creditsPage = () => {
  credits_html = `
    <h3>Coding</h3>
    <p><font color='#C13D3F'>imyourstudent</font> (Mewthree_24 on Reddit)</p>
    <p><font color='#CC8899'>Wesley1964</font> (on Reddit)</p>
    <h3>Writing</h3>
    <p><font color='#00FF00'>damnation10004238</font></p>
    <p><font color='#d3cc3d'>krypto_567</font><p>
    <p><font color='#0000FF'>chickenlover129</font></p>
    <p><font color='#641E16'>trickledowntwinkanomics</font></p>
    <h3>Playtesting/Misc. Help</h3>
    <p><em><b><font color='red'>Board667#8785</font></b></em></p>
    <p>AngryGandhi#3704</p>
    <p>Chapu#1656</p>
    <p>pedrocheems#6531</p>
    <p>Diamondy30901#0308</p>
    <p>TomBoxXD#1642</p>
    <h3>Music Credit</h3>
    <p>Born In The U.S.A. - Bruce Springsteen</p>
    <p>Jump - Van Halen</p>
    <p>Billie Jean - Michael Jackson</p>
    <p>Africa - Toto</p>
    <p>Rock The Casbah - The Clash</p>
    <p>Hungry Like The Wolf - Duran Duran</p>
    <p>Sweet Dreams (Are Made Of This) - The Eurythmics</p>
    <p>Take On Me - a-ha</p>
    <p>Eye of The Tiger - Survivor</p><br><br>
    <h3>Special Thanks (people I 'borrowed' code from)</h3>
    <p><font color='#65bc6d'>decstarg</font> (Credits Code, Music Player)</p>
    <p>Obamanation (will replace with relevant coder later, Header Code)</p>
    <h1><font color='gold'>Final Note</font></h1>
    <div style='width: 70%;text-overflow: ellipsis;text-align:center;display: block;margin-left: auto;margin-right: auto;'>
    <p>Hi, this is Decstar. I just wanted to thank you for playing this mod.</p>
    <p>This particular style of mod isn't necessarily the "norm" for TCT, but when I was developing the concept, I thought it would play well in the medium.</p>
    <p>I hope you enjoy/did enjoy the mod.</p>
    <p>To my fellow developers (who haven't seen this yet): thank you so much for your help with this, I think each of you have done a fantastic job. Thank you for putting up with my 4am schizo ideas for new endings.</p>
    <p>And as always, remember that it's raining somewhere else.</p>
    </div>
  `
  changeGameDisp(true);
  var spacer = document.createElement("amongusspacerthisisntarealelement");
  spacer.innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
  document
    .getElementsByClassName("inner_window_w_desc")[0]
    .children[1].appendChild(spacer);
    changeGameDisp(true);
    var menuHeader = document.createElement("div");
    menuHeader.classList.add("inner_window_front");
    menuHeader.innerHTML = `<h1 style='font-family: "Times New Roman";'><font color='#0496f7'>Credits</font></h1>`;
    menuHeader.id = "SOTUheader";
    menuHeader.style = "height: 50px;background-color:#2d2d2d";
    var newMenu = document.createElement("div");
    newMenu.classList.add("inner_window_front");
    newMenu.id = "SOTUmenu";
    newMenu.style = `height:260px;background-color:#2d2d2d;color:white;overflow-y: scroll;`;

    newMenu.innerHTML = credits_html;
    let z = document.getElementById("game_window");
    var backButton = document.createElement("button");
    backButton.style =
      "position: relative; bottom: -13px; left: -380px; width: 150px; height: 80px;font-size:40px;padding-top:5px;padding-left:8px";
    backButton.id = "backSOTUBtn";
    backButton.innerHTML = `<b>BACK</b>`;
    backButton.onclick = function () {
      document.getElementById("SOTUheader").remove();
      document.getElementById("SOTUmenu").remove();
      document.getElementById("backSOTUBtn").remove();
      changeGameDisp(false);
    };
    z.appendChild(menuHeader);
    z.appendChild(newMenu);
    z.appendChild(backButton);

}

e.credits = "<button onclick='e.creditsPage()'><i><b>LINCOLN TRAIL</b></i></button>"

campaignTrail_temp.global_parameter_json = [
    {
        "model": "campaign_trail.global_parameter",
        "pk": 1,
        "fields": {
            "vote_variable": 1.125,
            "max_swing": 0.12,
            "start_point": 0.94,
            "candidate_issue_weight": 10,
            "running_mate_issue_weight": 3,
            "issue_stance_1_max": -0.71,
            "issue_stance_2_max": -0.3,
            "issue_stance_3_max": -0.125,
            "issue_stance_4_max": 0.125,
            "issue_stance_5_max": 0.3,
            "issue_stance_6_max": 0.71,
            "global_variance": 0.01,
            "state_variance": 0.005,
            "question_count": 39,
            "default_map_color_hex": "#C9C9C9",
            "no_state_map_color_hex": "#999999"
        }
    }
]

campaignTrail_temp.opponents_default_json = [
    {
        "election": 15,
        "candidates": [
            152,
            153,
	    154,
            155
        ]
    }
]

campaignTrail_temp.opponents_weighted_json = [
    {
        "election": 15,
        "candidates": [
            152,
            153,
	    154,
            155
        ]
    }
]

campaignTrail_temp.temp_election_list = [
    {
        "id": 15,
        "year": 1988,
        "is_premium": 0,
        "display_year": "1984 - Morning In America"
    }
]

jet_data = {
    "headerColor": "#700016",
    "windowColor": "#ffbdbd",
    "containerColor": "#ffe5e5",
    "innerWindowColor": "#ffe5e5",
    "bannerImageUrl": "https://lh3.googleusercontent.com/d/1kDVLTf8_DtLQgdIZX6rbRbNz4gDlX6k7",
    "backgroundImageUrl": "https://lh3.googleusercontent.com/d/1Yuxfci9ZhkfaBHetakG8i0v3v7n8n0tp",
    "endingTextColor": "#000000",
    "customQuote": "",
    "gameTitle": "MORNING IN AMERICA"
}

//#startcode


corrr = `<div style="font-size: 11px; font-family: monospace; color: white;">
	<h2 style="font-style: normal;">
	<img src="https://lh3.googleusercontent.com/d/18IbxE5mViBsTN_HHsAay0AGILGWiBDZn" alt="MORNING IN AMERICA" style="margin-top: 0px; width: 963.4px; height: auto;">
	</h2>
	</div>
	`;


nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#700016";

nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#ffbdbd";

document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;

$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;

$(".container")[0].style.backgroundColor = "#ffe5e5";

document.getElementById("header").src = "https://lh3.googleusercontent.com/d/1kDVLTf8_DtLQgdIZX6rbRbNz4gDlX6k7";

document.body.background = "https://lh3.googleusercontent.com/d/1Yuxfci9ZhkfaBHetakG8i0v3v7n8n0tp";

document.head.innerHTML += "<style>#results_container {color:#000000;} .inner_window_w_desc {background-color:#ffe5e5!important;}</style>";

//#endcode

const campaignCSS = document.createElement('style');
// Add the CSS rule to the style element
campaignCSS.textContent = `
#campaign_sign { 
    background-image: url('https://lh3.googleusercontent.com/d/18Ddg9v3ts_B-EQgbBIS5f0UuWX1J8bHN'); 
    text-indent: -9999px;
    background-repeat: no-repeat;
    background-size: 275px; 
    height: 100px; 
    width: 275px ;
    background-position: center;
    border: none;
}`
document.head.appendChild(campaignCSS);

// Initialise custom music

$("#music_player")[0].children[0].style.display="none"
$("#music_player")[0].children[1].style.display="none"

document.getElementById("modLoadReveal").style.display="none"
document.getElementById("modloaddiv").style.display="none"

musicBox = document.getElementById("music_player")
musicBox.style.display=""

var trackSel;
e = campaignTrail_temp
e.selectedSoundtrack = 0

toTime = (seconds) => {
  var date = new Date(null);
  date.setSeconds(seconds);
  return date.toISOString().substr(11, 8);
}

generateTime = () => {
    // Get the audio element
    var audio = document.getElementById("campaigntrailmusic");

    timeTracker = document.createElement("div");
    timeTracker.style = `
      text-align:left;
      border-style:solid;
      border-width:3px;
      height:150px;
      width:200px;
      background-color:#999999;
      float:right;
      padding: 10px;
    `
    $("#trackSelParent")[0].prepend(timeTracker);
    $("#trackSelParent")[0].prepend(document.createElement("br"));

    // Create a new element to display the current position of the audio
    var positionDisplay = document.createElement("gg");
    positionDisplay.id = "position-display";

    // Create a new slider element to change the time
    var timeSlider = document.createElement("input");
    timeSlider.type = "range";
    timeSlider.min = 0;
    timeSlider.max = 1;
    timeSlider.step = 0.001;
    timeSlider.value = 0;
    timeSlider.style.width = "200px";
    timeSlider.id = "time-slider";

    var pausePlay = document.createElement("button");
    pausePlay.id = "position-display";
    pausePlay.innerHTML = "<b>Pause</b>"
    pausePlay.style.width = "100%";


    pausePlay.addEventListener("click", event => {
      event.preventDefault();
      updatePositionDisplay();
      let audio = document.getElementById("campaigntrailmusic");
      if (audio.paused) {
        audio.play();
        event.target.innerHTML = "<b>Pause</b>";
        return;
      }
      audio.pause();
      event.target.innerHTML = "<b>Play</b>";
      return;
    })

    var volumeLabel = document.createElement("gg");
    volumeLabel.id = "volume-label";
    volumeLabel.innerHTML = "<br><b>Volume: </b>"

    var volumeSlider = document.createElement("input");
    volumeSlider.type = "range";
    volumeSlider.min = 0;
    volumeSlider.max = 1;
    volumeSlider.step = 0.001;
    volumeSlider.value = 0;
    volumeSlider.style.width = "200px";
    volumeSlider.id = "volume-slider";

    volumeSlider.value = audio.volume;

    timeTracker.appendChild(pausePlay);
    timeTracker.appendChild(document.createElement("br"));
    timeTracker.appendChild(document.createElement("br"));
    timeTracker.appendChild(positionDisplay);
    timeTracker.appendChild(timeSlider);
    timeTracker.appendChild(volumeLabel);
    timeTracker.appendChild(volumeSlider);

    updatePositionDisplay();

    //for (let i = 0; i < 10; i++)
    //timeTracker.append(document.createElement("br"));


    // Function to update the position display
    function updatePositionDisplay() {
      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
      timeSlider.value = audio.duration ? audio.currentTime / audio.duration : 0;
    }

    // Function to change the time of the audio
    function changeTime() {
      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";
      audio.currentTime = timeSlider.value * audio.duration;
    }

    updateVolume = event => {
      audio.volume = event.target.value;
    }
    
    // Update the position display and slider every second
    setInterval(updatePositionDisplay, 1000);

    // Listen for changes to the time slider and change the time of the audio
    timeSlider.addEventListener("input", changeTime);
    volumeSlider.addEventListener("input", updateVolume)
}

function newMusicPlayer() {
  trackSel = document.createElement("div");
  trackSel.id = "trackSelParent"
  let z = `<br><br><br><br><br><br><br><br><br><br><div id='trackSel' style="text-align:left;border-style:solid;border-width:3px;overflow-y: scroll;overflow-x: hidden;height:200px; width:400px;background-color:#999999;float:right;">`
  z += `<b><select id='selectSoundtrack'><option value='`+soundtracks[e.selectedSoundtrack].name+`'>`+soundtracks[e.selectedSoundtrack].name+"</option>"
  for (i in soundtracks) {
    if (soundtracks[e.selectedSoundtrack] != soundtracks[i]) {
      z += `<option value='`+soundtracks[i].name+`'>`+soundtracks[i].name+`</option>`
    }
  }
  z += `</select></b><br><br>`
  // <label><input type="radio" name="option" value="option1">Option 1</label><br>
  for (i in soundtracks[e.selectedSoundtrack].tracklist) {
    let a = soundtracks[e.selectedSoundtrack].tracklist[i]
    let b = `<label><input class="trackSelector" type="radio" name="trackSelector" value="`+i+`">`+a.name+`</label><br>`
    z += b
  }
  z += "</div><br><br>"
  trackSel.innerHTML = z

  // select correct song

  musicBox.appendChild(trackSel);
  Array.from(document.getElementById("trackSel").children).filter(f=>{
    return f.tagName == "LABEL"
  }).map(f=>f.children[0])[0].checked = true

  // set soundtrack changer

  soundtrackSelector = document.getElementById("selectSoundtrack")
  soundtrackSelector.onchange = function() {
    for (i in soundtracks) {
      if (soundtracks[i].name == soundtrackSelector.value) {
        e.selectedSoundtrack = i
        break
      }
    }
    document.getElementById("trackSelParent").remove()
    newMusicPlayer()
  }

  var matches = document.querySelectorAll('.trackSelector');

  for (match in matches) {
    matches[match].onchange = function() {
      audio = $("#campaigntrailmusic")[0];
      audio.src = soundtracks[e.selectedSoundtrack].tracklist[this.value].url
      audio.currentTime = 0
    }
  }

  musicBox.children[2].loop = false
  musicBox.children[2].src = soundtracks[e.selectedSoundtrack].tracklist[0].url

  musicBox.children[2].onended = function() {
    console.log("next track")
    let selected = Number(document.querySelector('input[name="trackSelector"]:checked').value);
    let newSel = clamp(selected+1, soundtracks[e.selectedSoundtrack].tracklist.length-1, 0)
    let buttons = Array.from(document.getElementById("trackSel").children).filter(f=>{
      return f.tagName == "LABEL"
    }).map(f=>f.children[0])
    //let selectedIndex = buttons.map(f=>f.children[0]).map(f=>f.checked)
    buttons[newSel].click()
  }

  for (w = 0; w < 7; w++) {
    document.getElementById("trackSelParent").appendChild(document.createElement("br"))
  }
  
  generateTime();
}

clamp = function(a, max, min, overflow=true) {
  if (overflow) {
    return a > max ? min : a < min ? max : a;
  }
  return a > max ? max : a < min ? min : a;
}


// Track list

var soundtracks = {
  0: {
    name: "Morning In America",
    tracklist: [
      {
        "name": "Bruce Springsteen - Born In The U.S.A.",
        "url": "https://files.catbox.moe/h0e9fv.mp3"
      },
      {
        "name": "Van Halen - Jump",
        "url": "https://files.catbox.moe/6dzfwj.mp3"
      },
      {
        "name": "Michael Jackson - Billie Jean",
        "url": "https://files.catbox.moe/ywsb1l.mp3"
      },
      {
        "name": "Toto - Africa",
        "url": "https://files.catbox.moe/8m06uo.mp3"
      },
      {
        "name": "The Clash - Rock The Casbah",
        "url": "https://files.catbox.moe/l7fttj.mp3"
      },
      {
        "name": "Duran Duran - Hungry Like The Wolf",
        "url": "https://files.catbox.moe/i9015n.mp3"
      },
      {
        "name": "The Eurythmics - Sweet Dreams (Are Made Of This)",
        "url": "https://files.catbox.moe/9x6lr1.mp3"
      },
      {
        "name": "a-ha - Take On Me",
        "url": "https://files.catbox.moe/qbbjct.mp3"
      },
      {
        "name": "Survivor - Eye Of The Tiger",
        "url": "https://files.catbox.moe/2qmir0.mp3"
      }
    ]
  }
}

// Set up new music player

newMusicPlayer()
